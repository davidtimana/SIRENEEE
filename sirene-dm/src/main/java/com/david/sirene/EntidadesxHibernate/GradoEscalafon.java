package com.david.sirene.EntidadesxHibernate;

// Generated 15/01/2014 11:40:41 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * GradoEscalafon generated by hbm2java
 */
@Entity
@Table(name = "grado_escalafon", catalog = "bd_sianglv", uniqueConstraints = @UniqueConstraint(columnNames = "gescala_nombre"))
public class GradoEscalafon implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2420216564542316848L;
	private Integer gescalaId;
	private String gescalaNombre;
	private Set<Experiencia> experiencias = new HashSet<Experiencia>(0);

	public GradoEscalafon() {
	}

	public GradoEscalafon(String gescalaNombre) {
		this.gescalaNombre = gescalaNombre;
	}

	public GradoEscalafon(String gescalaNombre, Set<Experiencia> experiencias) {
		this.gescalaNombre = gescalaNombre;
		this.experiencias = experiencias;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "gescala_id", unique = true, nullable = false)
	public Integer getGescalaId() {
		return this.gescalaId;
	}

	public void setGescalaId(Integer gescalaId) {
		this.gescalaId = gescalaId;
	}

	@Column(name = "gescala_nombre", unique = true, nullable = false, length = 100)
	public String getGescalaNombre() {
		return this.gescalaNombre;
	}

	public void setGescalaNombre(String gescalaNombre) {
		this.gescalaNombre = gescalaNombre;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "gradoEscalafon")
	public Set<Experiencia> getExperiencias() {
		return this.experiencias;
	}

	public void setExperiencias(Set<Experiencia> experiencias) {
		this.experiencias = experiencias;
	}

}
